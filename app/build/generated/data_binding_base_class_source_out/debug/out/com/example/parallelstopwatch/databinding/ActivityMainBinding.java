// Generated by view binder compiler. Do not edit!
package com.example.parallelstopwatch.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.parallelstopwatch.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnResetService;

  @NonNull
  public final Button btnResetThread;

  @NonNull
  public final Button btnStartStopService;

  @NonNull
  public final Button btnStartStopThread;

  @NonNull
  public final LinearLayout linearLayoutServiceButtons;

  @NonNull
  public final LinearLayout linearLayoutThreadButtons;

  @NonNull
  public final TextView tvServiceTime;

  @NonNull
  public final TextView tvServiceTitle;

  @NonNull
  public final TextView tvThreadTime;

  @NonNull
  public final TextView tvThreadTitle;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnResetService,
      @NonNull Button btnResetThread, @NonNull Button btnStartStopService,
      @NonNull Button btnStartStopThread, @NonNull LinearLayout linearLayoutServiceButtons,
      @NonNull LinearLayout linearLayoutThreadButtons, @NonNull TextView tvServiceTime,
      @NonNull TextView tvServiceTitle, @NonNull TextView tvThreadTime,
      @NonNull TextView tvThreadTitle) {
    this.rootView = rootView;
    this.btnResetService = btnResetService;
    this.btnResetThread = btnResetThread;
    this.btnStartStopService = btnStartStopService;
    this.btnStartStopThread = btnStartStopThread;
    this.linearLayoutServiceButtons = linearLayoutServiceButtons;
    this.linearLayoutThreadButtons = linearLayoutThreadButtons;
    this.tvServiceTime = tvServiceTime;
    this.tvServiceTitle = tvServiceTitle;
    this.tvThreadTime = tvThreadTime;
    this.tvThreadTitle = tvThreadTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnResetService;
      Button btnResetService = ViewBindings.findChildViewById(rootView, id);
      if (btnResetService == null) {
        break missingId;
      }

      id = R.id.btnResetThread;
      Button btnResetThread = ViewBindings.findChildViewById(rootView, id);
      if (btnResetThread == null) {
        break missingId;
      }

      id = R.id.btnStartStopService;
      Button btnStartStopService = ViewBindings.findChildViewById(rootView, id);
      if (btnStartStopService == null) {
        break missingId;
      }

      id = R.id.btnStartStopThread;
      Button btnStartStopThread = ViewBindings.findChildViewById(rootView, id);
      if (btnStartStopThread == null) {
        break missingId;
      }

      id = R.id.linearLayoutServiceButtons;
      LinearLayout linearLayoutServiceButtons = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutServiceButtons == null) {
        break missingId;
      }

      id = R.id.linearLayoutThreadButtons;
      LinearLayout linearLayoutThreadButtons = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutThreadButtons == null) {
        break missingId;
      }

      id = R.id.tvServiceTime;
      TextView tvServiceTime = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceTime == null) {
        break missingId;
      }

      id = R.id.tvServiceTitle;
      TextView tvServiceTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceTitle == null) {
        break missingId;
      }

      id = R.id.tvThreadTime;
      TextView tvThreadTime = ViewBindings.findChildViewById(rootView, id);
      if (tvThreadTime == null) {
        break missingId;
      }

      id = R.id.tvThreadTitle;
      TextView tvThreadTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvThreadTitle == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnResetService, btnResetThread,
          btnStartStopService, btnStartStopThread, linearLayoutServiceButtons,
          linearLayoutThreadButtons, tvServiceTime, tvServiceTitle, tvThreadTime, tvThreadTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
